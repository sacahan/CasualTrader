# ==================== CasualTrader Backend Configuration ====================
# 配置文件說明：本文件包含 CasualTrader 後端服務的所有環境變數設定
# 使用方式：複製此檔案為 .env 並根據實際需求修改相應值

# ==================== OpenAI API ====================
# OpenAI API 金鑰，用於 AI Agent 和模型調用
# 獲取方式：https://platform.openai.com/api-keys
OPENAI_API_KEY="your-openai-api-key-here"

# ==================== MCP Server Configuration ====================
# Model Context Protocol (MCP) Server 配置
# 用於整合外部工具和服務到 AI Agent 中

# Casual Market MCP Server - 台灣股市資料服務
MCP_CASUAL_MARKET_COMMAND="uvx"                    # 執行命令 (uvx 或 npx)
MCP_CASUAL_MARKET_ARGS=["casual-market-mcp"]       # MCP Server 參數陣列 (JSON 格式)，範例: ["casual-market-mcp"] 或 ["--from", "/path/to/dir", "casual-market-mcp"]
MCP_CASUAL_MARKET_TIMEOUT=10                       # API 請求超時時間（秒）
MCP_CASUAL_MARKET_RETRIES=5                        # API 重試次數

# ==================== API Server Settings ====================
# FastAPI 服務器配置
API_HOST=0.0.0.0                                   # 監聽位址 (0.0.0.0 允許外部訪問)
API_PORT=8000                                      # 監聽端口
API_RELOAD=true                                    # 開發模式自動重載
API_WORKERS=1                                      # Worker 進程數量

# ==================== CORS Settings ====================
# 跨域資源共享 (CORS) 配置
CORS_ORIGINS=["http://localhost:3000", "http://localhost:5173"]  # 允許的來源
CORS_ALLOW_CREDENTIALS=true                        # 允許發送認證資訊

# ==================== Logging Settings ====================
# 日誌配置
LOG_LEVEL=INFO                                     # 日誌級別 (DEBUG/INFO/WARNING/ERROR)
LOG_FORMAT=<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level> # 日誌輸出格式
LOG_FILE=logs/api_{time:YYYY-MM-DD}.log 		   # 日誌檔案路徑
LOG_ROTATION=500 MB                                # 日誌輪換大小
LOG_RETENTION=30 days                              # 日誌保留時間
LOG_COMPRESSION=zip                                # 日誌壓縮格式

# ==================== Database Settings ====================
# 資料庫配置 (使用 SQLite + AsyncIO)
DATABASE_URL=sqlite+aiosqlite:///casualtrader.db # 資料庫連接 URL (相對於 backend 目錄)
DATABASE_ECHO=false                              # 是否輸出 SQL 查詢日誌

# ==================== Agent Settings ====================
# AI Agent 基本配置
MAX_AGENTS=10                                      # 最大同時執行 Agent 數量（控制併發執行數）
DEFAULT_AI_MODEL=gpt-5-mini                        # 預設 AI 模型
DEFAULT_INITIAL_CAPITAL=1000000                    # 預設初始資金（新台幣）

# ==================== Agent Execution Settings ====================
# Agent 執行參數配置
DEFAULT_MAX_TURNS=30                               # 主 Agent 最大執行回合數
DEFAULT_AGENT_TIMEOUT=300                          # 主 Agent 執行超時時間（秒），會覆蓋所有 sub-agents
DEFAULT_SUBAGENT_MAX_TURNS=15                      # Sub-agent 最大執行回合數

# ==================== WebSocket Settings ====================
# WebSocket 連接配置
WS_HEARTBEAT_INTERVAL=30                           # 心跳間隔（秒）
WS_MAX_CONNECTIONS=100                             # 最大連接數

# ==================== Rate Limiting ====================
# API 請求頻率限制（預留功能）
RATE_LIMIT_ENABLED=false                           # 是否啟用頻率限制
RATE_LIMIT_PER_MINUTE=60                           # 每分鐘最大請求數

# ==================== Environment ====================
# 運行環境配置
ENVIRONMENT=development                            # 環境名稱 (development/production)
DEBUG=true                                         # 是否啟用除錯模式
