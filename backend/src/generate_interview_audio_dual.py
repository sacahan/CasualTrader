from openai import OpenAI
import os
from dotenv import load_dotenv

load_dotenv()

# ====== 設定區 ======
# Note: Set OPENAI_API_KEY environment variable before running this script
# Example: export OPENAI_API_KEY="sk-..."

if not os.getenv("OPENAI_API_KEY"):
    raise ValueError(
        "OPENAI_API_KEY environment variable is not set. Please set it before running this script."
    )

client = OpenAI()

# ====== Short Version（中英對照） ======
short_text = """
Hi, I’m Brian Han...
嗨，我是 Brian Han。...

I’m a senior software engineer with around 18 years of experience....
我是一名擁有大約18年經驗的資深軟體工程師。...

Most of my work has been with Java and Python...
我的主要工作語言是 Java 和 Python。...

Building large-scale systems using Spring Boot and Spring Cloud. ...
我常使用 Spring Boot 和 Spring Cloud 建構大型系統。...

I really enjoy solving complex problems...
我非常享受解決複雜問題的過程。...

For example, I once built a socket-based auto-reconnect system to fix unstable SMS connections. ...
舉例來說，我曾設計一套基於 Socket 的自動重連機制，用來修正不穩定的簡訊連線。...

In another project, I redesigned a payment system using distributed locks to handle high concurrency. ...
在另一個專案中，我利用分散式鎖重新設計支付系統，成功處理高併發問題。...

I’m a strong team player...
我非常重視團隊合作。...

And I often help connect business goals with technical solutions. ...
我常協助把業務目標轉化為技術解法。...

I’m also passionate about AI applications...
我也對人工智慧應用非常熱衷。...

And love exploring new technologies. ...
並熱愛探索新技術。...

I’d describe myself as someone who’s curious, hands-on, and always ready to tackle tough challenges. ...
我會形容自己是一個好奇、實作導向、且樂於挑戰困難的人。...
"""

# ====== Full Version（中英對照） ======
full_text = """
Hi, my name is Brian Han...
嗨，我叫 Brian Han。...

I’ve been working as a software engineer for about 18 years. ...
我已經擔任軟體工程師大約18年。...

Over the years, I’ve focused mainly on Java, Python, and distributed systems...
這些年來，我主要專注在 Java、Python 以及分散式系統上。...

Building backend platforms with Spring Boot, Spring Cloud, and cloud services like AWS and GCP. ...
我使用 Spring Boot、Spring Cloud，以及 AWS 和 GCP 等雲端服務建構後端平台。...

One project I’m proud of was when we had to integrate with an unreliable SMS gateway. ...
我印象深刻的一個專案，是要整合一個不穩定的簡訊閘道服務。...

Their API kept dropping connections...
它的 API 連線常常中斷。...

So I created a Java NIO-based reconnection system that automatically detected failures and reconnected. ...
因此我開發了一套基於 Java NIO 的自動重連系統，可以自動偵測失敗並重新連線。...

It drastically reduced message failures and stabilized the service. ...
這大幅降低了簡訊失敗率，讓系統穩定許多。...

In another case, our payment system faced duplicate transactions during peak hours. ...
在另一個案例中，我們的支付系統在高峰時段會出現重複交易問題。...

I analyzed the issue and redesigned the process with distributed locks...
我分析問題後，利用分散式鎖重新設計交易流程。...

Which completely solved the problem and improved reliability. ...
這完全解決了問題，也提升了系統穩定性。...

I’ve also led small teams and coordinated cross-functional projects. ...
我也曾領導小型團隊並協調跨部門專案。...

I like to keep everyone aligned — breaking tasks down, tracking progress, and making sure we deliver on time. ...
我喜歡確保團隊方向一致，將任務拆解、追蹤進度，並確保準時交付。...

My strength is balancing technical depth with clear communication...
我的強項是結合技術深度與清晰的溝通能力。...

So the whole team moves in the same direction. ...
讓整個團隊能朝同一方向前進。...

Outside of work, I’m really into AI and agentic workflows...
在工作之外，我對人工智慧與智能代理流程很感興趣。...

I like experimenting with how automation can make engineers more productive. ...
我喜歡嘗試如何透過自動化讓工程師更有效率。...

And when I’m not coding, I enjoy diving and riding motorcycles...
不寫程式的時候，我喜歡潛水與騎重機。...

I guess I like challenges both in and out of work. ...
我想我喜歡在工作與生活中都面對挑戰。...

To sum up, I’d say I’m an experienced engineer who loves solving hard problems...
總結來說，我是一位熱愛解決難題的資深工程師。...

Building reliable systems and helping teams work better together. ...
我喜歡打造穩定的系統，也喜歡讓團隊更有凝聚力地一起成長。...
"""


# ====== 生成音檔函式 ======
def generate_tts(text, filename):
    print(f"🎙️ Generating {filename} ...")
    response = client.audio.speech.create(
        model="gpt-4o-mini-tts",
        voice="alloy",  # 男性美式聲線
        input=text,
    )
    response.stream_to_file(filename)
    print(f"✅ Done: {filename}")


# ====== 執行 ======
generate_tts(short_text, "short_version_dual.mp3")
generate_tts(full_text, "full_version_dual.mp3")
