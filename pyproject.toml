[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["market_mcp"]

[project]
name = "market-mcp-server"
version = "0.1.0"
description = "台灣股價即時查詢 MCP Server (含 API 頻率限制)"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [{ name = "CasualTrader", email = "casualtrader@example.com" }]
keywords = ["mcp", "taiwan", "stock", "trading", "server"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastmcp>=2.7.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "cachetools>=5.0.0",
    "loguru>=0.7.0",
    "pydantic-settings>=2.11.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "openai>=2.0.0",
    "openai-agents>=0.1.0",
    "pandas>=2.3.3",
    "numpy>=2.3.3",
    "matplotlib>=3.10.6",
    "scipy>=1.16.2",
    "sqlalchemy>=2.0.43",
    "aiosqlite>=0.21.0",
    "greenlet>=3.2.4",
    "pytz>=2025.2",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0",
    "python-multipart>=0.0.20",
    "websockets>=14.0",
    "yfinance>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.scripts]
market-mcp-server = "market_mcp.main:main"

[project.urls]
Homepage = "https://github.com/sacahan/CasualTrader"
Repository = "https://github.com/sacahan/CasualTrader"
Issues = "https://github.com/sacahan/CasualTrader/issues"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.13.2",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=market_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
asyncio_mode = "auto"
